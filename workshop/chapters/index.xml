<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lecture chapters on</title><link>https://openfoam-parallelisation-course.github.io/workshop/chapters/</link><description>Recent content in Lecture chapters on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 25 Jan 2022 14:41:21 +0100</lastBuildDate><atom:link href="https://openfoam-parallelisation-course.github.io/workshop/chapters/index.xml" rel="self" type="application/rss+xml"/><item><title>Point-to-Point communications - general introdution</title><link>https://openfoam-parallelisation-course.github.io/workshop/chapters/01-p2p-comms/</link><pubDate>Tue, 25 Jan 2022 14:41:39 +0100</pubDate><guid>https://openfoam-parallelisation-course.github.io/workshop/chapters/01-p2p-comms/</guid><description/></item><item><title>Blocking P2P comms</title><link>https://openfoam-parallelisation-course.github.io/workshop/chapters/p2p-comms-blocking/</link><pubDate>Tue, 25 Jan 2022 14:41:39 +0100</pubDate><guid>https://openfoam-parallelisation-course.github.io/workshop/chapters/p2p-comms-blocking/</guid><description/></item><item><title>Non-Blocking P2P comms</title><link>https://openfoam-parallelisation-course.github.io/workshop/chapters/p2p-comms-nonblocking/</link><pubDate>Tue, 25 Jan 2022 14:41:39 +0100</pubDate><guid>https://openfoam-parallelisation-course.github.io/workshop/chapters/p2p-comms-nonblocking/</guid><description/></item><item><title>P2P comms - Quiz</title><link>https://openfoam-parallelisation-course.github.io/workshop/chapters/01-p2p-comms-quiz/</link><pubDate>Wed, 25 Jan 2023 14:41:39 +0100</pubDate><guid>https://openfoam-parallelisation-course.github.io/workshop/chapters/01-p2p-comms-quiz/</guid><description>--- primary_color: cyan secondary_color: lightgray text_color: black shuffle_questions: false shuffle_answers: true --- ## Basic P2P comms Consider the following code snippet, featuring a short communication between two processes: ```java if (Pstream::master()) { IPstream fromSlave (Pstream::commsTypes::blocking, 1); label i = readLabel(fromSlave); } else if (Pstream::myProcNo() == 1) { OPstream toMaster (Pstream::commsTypes::blocking, Pstream::masterNo()); toMaster &lt;&lt; 5; } ``` The value of `i` on **master** process will be: - [ ] 0 - [x] 5 - [ ] The master process never defines `i` ## Careful, not to run into issues!</description></item><item><title>Collective communications - general introdution</title><link>https://openfoam-parallelisation-course.github.io/workshop/chapters/02-collective-comms/</link><pubDate>Tue, 25 Jan 2022 14:41:39 +0100</pubDate><guid>https://openfoam-parallelisation-course.github.io/workshop/chapters/02-collective-comms/</guid><description/></item><item><title>Collective comms API</title><link>https://openfoam-parallelisation-course.github.io/workshop/chapters/collective-comms-api/</link><pubDate>Tue, 25 Jan 2022 14:41:39 +0100</pubDate><guid>https://openfoam-parallelisation-course.github.io/workshop/chapters/collective-comms-api/</guid><description/></item><item><title>Collective comms - Quiz</title><link>https://openfoam-parallelisation-course.github.io/workshop/chapters/02-collective-comms-quiz/</link><pubDate>Wed, 25 Jan 2023 14:41:39 +0100</pubDate><guid>https://openfoam-parallelisation-course.github.io/workshop/chapters/02-collective-comms-quiz/</guid><description>--- primary_color: cyan secondary_color: lightgray text_color: black shuffle_questions: false shuffle_answers: true --- ## Basic collective comms Consider the following code snippet: ```java // obj.update() returns a bool, whether obj was updated or not. updated = Foam::returnReduce(obj.update(), andOp()); ``` The value of `updated` will: - [x] Be true if `obj` was updated on all processes. - [ ] Be true if `obj` was updated on at least one process. - [ ] Be always false, because `update()` is never called.</description></item><item><title>How do I send my own data?</title><link>https://openfoam-parallelisation-course.github.io/workshop/chapters/03-send-custom-data/</link><pubDate>Tue, 25 Jan 2022 14:41:39 +0100</pubDate><guid>https://openfoam-parallelisation-course.github.io/workshop/chapters/03-send-custom-data/</guid><description/></item><item><title>Send custom data - common issues</title><link>https://openfoam-parallelisation-course.github.io/workshop/chapters/common-issues-sending-custom-data/</link><pubDate>Tue, 25 Jan 2022 14:41:39 +0100</pubDate><guid>https://openfoam-parallelisation-course.github.io/workshop/chapters/common-issues-sending-custom-data/</guid><description/></item><item><title>Application examples and advanced topics</title><link>https://openfoam-parallelisation-course.github.io/workshop/chapters/04-advanced-topics/</link><pubDate>Tue, 25 Jan 2022 14:41:39 +0100</pubDate><guid>https://openfoam-parallelisation-course.github.io/workshop/chapters/04-advanced-topics/</guid><description/></item></channel></rss>